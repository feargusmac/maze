/* 
 * File:   mazeSolve.h
 * Author: Feargus
 *
 * Uses the Graph class and a Breadth First
 * Search algorithm so solve the mazes 
 * generated by mazeGen.
 * 
 * TODO:  enumerate top, bottom etc
 */

#ifndef MAZESOLVE_H
#define MAZESOLVE_H

#include "Graph.h"
#include <string>
#include <vector>

class mazeSolve {
public:
    //mazeSolve();
    mazeSolve(std::string);
    virtual ~mazeSolve();
    Graph *getInput(std::string);
    void solve();
    
private:
    void BFS(int);
    std::vector<int> adj(int);
    void printPath(int);
    bool isHex(char);
    Graph *maze;
    int dimension;
    
    // CONSTANTS
    
    int TOP = 8;
    int RIGHTSIDE = 1;
    int BOTTOM = 2;
    int LEFTSIDE = 4;

};

#endif /* MAZESOLVE_H */

